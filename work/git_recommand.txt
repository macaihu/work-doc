git 代码仓管理其他建议

过去的3年时间，大家对git代码仓的使用已经熟练，技能也有提高。现为提高效率，提出以下建议：

1 一次编译成功原则
在全新的linux环境下，一个指令，一次选择就可以编译出对应的软件，包括升级文件和烧片文件。
编译脚本中建议加人包括安装支持库安装，支持软件的下载（从公司ftp服务器）。
建议交叉编译器一次性编译好，放在ftp服务器上下载，避免每个人都要编译编译器。
建议定期使用新的虚拟机安装全新的系统，检验是否可以一次编译成功。

2 编译时间最短原则
尽量减少编译时间，合理写好makefile等，编译成功后，第二次编译时间应该尽可能减少， 避免多次编译的时间浪费。
makefile中依赖clean的做法，应该尽量避免。
建议每个仓增加编译时间显示，直观了解浪费的时间。

3 分支最少原则
git的分支功能强大，容易被过度使用。建议只在以下情况使用分支：
release分支：当出货版本时，建立release分支，方便以后给特定用户特定程序。
试验分支：当对完成性不确定，建立试验分支。当确定后，尽快合并到master。
对于多人在master开发容易冲突，冲突是好事，可以理解为强制交流的一种方式。

4 编译后无红色文件原则
全新下载的代码仓，没有做修改的情况下，编译成功后git status代码仓应该保持clean状态，没有被修改的文件，也没有增加的未跟踪文件。直观的看，就是没有红色的文件。避免有人错误的提交冗余文件

5 master最少merge 原则
尽量保持master为单一直线向上，虽然linux创始人不认可rebase的做法，但是对于我们这样的小公司来说，保持master直线，还是最容易理解和跟踪代码历史的方式。


